<?php	/* 		checkout email: client_1_asif@fsb.com.bd		password: R6MDHN		Transaction PIN: 3815		IPN Security Code:	gn5FMRcYzEorEqJ3	*/class Coderbay_Payza_IpnController extends Mage_Core_Controller_Front_Action{	/**	*	Payza response for payment notification  using (IPN = Instant Payment Notification) 	*	This function gets token from payza and then return it to payza again	*	after that payza returns payment information alone with payment status. This function	*	process that information.	**/		public function ipnhandlerAction()    {		// Real IPN V2        //define("IPN_V2_HANDLER", "https://secure.payza.com/ipn2.ashx");		// Test IPN 		define("IPN_V2_HANDLER", "https://sandbox.Payza.com/sandbox/IPN2.ashx");					define("TOKEN_IDENTIFIER", "token=");						// get the token from Payza		$token = urlencode($_POST['token']);				if($_POST['token'])		{			//preappend the identifier string "token=" 			$token = TOKEN_IDENTIFIER.$token;			$response = '';						$ch = curl_init();			curl_setopt($ch, CURLOPT_URL, IPN_V2_HANDLER);			curl_setopt($ch, CURLOPT_POST, true);			curl_setopt($ch, CURLOPT_POSTFIELDS, $token);			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);			curl_setopt($ch, CURLOPT_HEADER, false);			curl_setopt($ch, CURLOPT_TIMEOUT, 60);			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);			$response = curl_exec($ch);						if(strlen($response) > 0)			{				if(urldecode($response) == "INVALID TOKEN")				{					//the token is not valid					$this->cancelAction();				}				else				{					//urldecode the received response from Payza's IPN V2					$response = urldecode($response);										//split the response string by the delimeter "&"					$aps = explode("&", $response);										//create a file to save the response information from Payza's IPN V2						$myFile = Mage::getBaseDir('log')."/IPNRes.txt";					$fh = fopen($myFile,'a') or die("can't open the file");															//define an array to put the IPN information					$info = array();										foreach ($aps as $ap)					{						//put the IPN information into an associative array $info						$ele = explode("=", $ap);						$info[$ele[0]] = $ele[1];												//write the information to the file IPNRes.txt						fwrite($fh, "$ele[0] \t");						fwrite($fh, "=\t");						fwrite($fh, "$ele[1]\r\n");					}				}				// Do Database Update Task and Invoice Creation --start				$order_id = split("=",$info['apc_1']);				$order = Mage::getModel('sales/order');				if( $info['ap_referencenumber'] )// && ( $info['ap_merchant'] == $merchant_email ))				{										$pyza_order_id = $order->loadByIncrementId($orderId);					if($order_id == $pyza_order_id)					{						if( strtoupper($info['ap_status']) == 'SUCCESS' )						{							$order->addStatusToHistory($order->getStatus(), Mage::helper('payza')->__('Customer successfully returned from Gateway'));							$order->sendNewOrderEmail();							$order->setEmailSent(true);							$order->save();							Mage::getSingleton('checkout/session')->unsQuoteId();						}						else 						{							$order->addStatusToHistory($order->getStatus(), Mage::helper('payza')->__('Customer Failed To Pay'));							$this->cancelAction();						}												}// Order Id do not match					else					{						$this->cancelAction();					}// Order Id Match										  				}				//===================================				//if( $info['ap_test'] && ( $info['ap_referencenumber']=='TEST TRANSACTION' ))				if( $info['ap_test'])				{									$pyza_order_id = $order->loadByIncrementId($orderId);					if($order_id == $pyza_order_id)					{						if( strtoupper($info['ap_status']) == 'SUCCESS' )						{							$order->addStatusToHistory($order->getStatus(), Mage::helper('payza')->__('Customer successfully returned from Gateway'));							$order->sendNewOrderEmail();							$order->setEmailSent(true);							$order->save();							Mage::getSingleton('checkout/session')->unsQuoteId();						}						else 						{							$order->addStatusToHistory($order->getStatus(), Mage::helper('payza')->__('Customer Failed To Pay'));							$this->cancelAction();						}												}// Order Id do not match					else					{						$this->cancelAction();					}// Order Id Match								}				//========================================								// Do Database Update Task and Invoice Creation --end							}			else 			{				$order = Mage::getModel('sales/order');				$pyza_order_id = $order->loadByIncrementId($orderId);				$order->addStatusToHistory($order->getStatus(), Mage::helper('payza')->__('Customer successfully returned from Gateway'));					exit('empty gateway response');			}		}		else 		{		  exit('No Token. Exiting...');		}							/*if (!$this->getRequest()->isPost()) {            return;        }*/    }		// The cancel action is triggered when an order is to be cancelled	public function cancelAction()	{        if (Mage::getSingleton('checkout/session')->getLastRealOrderId()) {            $order = Mage::getModel('sales/order')->loadByIncrementId(Mage::getSingleton('checkout/session')->getLastRealOrderId());            if($order->getId()) {				// Flag the order as 'cancelled' and save it				$order->cancel()->setState(Mage_Sales_Model_Order::STATE_CANCELED, true, 'Gateway has declined the payment.')->save();			}        }	}}